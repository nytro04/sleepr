30th October
1st commit -> Add validations and Logger to reservation

npm i class-validator class-transformer and nestjs-pino, pino-http and pino-pretty

add useGlobalPipes(new ValidationPipe({whiteList: true})) to main.ts to enable validation
and whiteList to remove unwanted properties from the request body

add property decorator to the create reservation dto to validate the request body
NB: add Type from class-transformer to the property decorator to transform the request body to the type specified i.e Date


add pino logger to the common module(to make it reuseable into other models besides reservation)
and add it to the reservation module

2nd commit -> dockerize the application
 - add a dockerfile to the reservation app with development and production configurations
  - add a docker-compose file to run the reservation app and the database(mongo)
  - add dockerignore file to ignore node_modules and dist folder
  - update env file to use the mongo container name as the host instead of localhost


31st October

  1st commit -
    Authentication
    - nest g auth app to generate the auth app
    - nest g module users
    - nest g controller users

    - dockerize auth app
    - connected userModule to database
    - added auth app and users module,controller, services and repository with logging and validation
    - added create user[controller, service, dto and model]

  2nd commit -
    - npm i @nestjs/passport passport passport-local @nestjs/jwt passport-jwt
    - npm i -D @types/passport-local @types/passport-jwt
    - configure jwt in auth module
    - separate auth and reservation .env files and updated docker-compose to use the new env files
    - move config from config folder to each app
